"""add_property_type_to_listings

Revision ID: 6f90aa21d1c0
Revises: c15e11273830
Create Date: 2025-09-18 02:37:34.864931

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6f90aa21d1c0'
down_revision: Union[str, Sequence[str], None] = 'c15e11273830'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('chats')
    op.drop_table('reports')
    op.drop_table('messages')
    op.drop_table('lookups')
    op.drop_table('auth_tokens')
    op.add_column('listings', sa.Column('property_type', sa.Enum('kvartira', 'uy', 'ofis', name='propertytype'), nullable=True))
    op.alter_column('listings', 'id',
               existing_type=sa.CHAR(length=32),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.alter_column('listings', 'user_id',
               existing_type=sa.VARCHAR(length=36),
               nullable=False)
    op.alter_column('listings', 'currency',
               existing_type=sa.VARCHAR(length=3),
               nullable=False,
               existing_server_default=sa.text("'USD'"))
    op.drop_constraint(None, 'listings', type_='foreignkey')
    op.create_foreign_key(None, 'listings', 'users', ['user_id'], ['id'])
    op.drop_column('listings', 'contacts')
    op.drop_column('listings', 'listing_type')
    op.drop_column('listings', 'deposit')
    op.drop_column('listings', 'contact_phone')
    op.drop_column('listings', 'contact_name')
    op.drop_column('listings', 'region')
    op.drop_column('listings', 'city')
    op.drop_column('listings', 'has_parking')
    op.drop_column('listings', 'utilities_included')
    op.drop_column('listings', 'is_premium')
    op.drop_column('listings', 'views')
    op.drop_column('listings', 'has_internet')
    op.drop_column('listings', 'is_furnished')
    op.drop_column('listings', 'has_balcony')
    op.drop_column('listings', 'available_from')
    op.drop_column('listings', 'photos')
    op.drop_column('listings', 'area')
    op.drop_column('listings', 'owner_id')
    op.drop_column('listings', 'rejected_at')
    op.alter_column('users', 'id',
               existing_type=sa.CHAR(length=32),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.drop_column('users', 'block_reason')
    op.drop_column('users', 'first_name')
    op.drop_column('users', 'verified_at')
    op.drop_column('users', 'is_blocked')
    op.drop_column('users', 'username')
    op.drop_column('users', 'phone')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'blocked_at')
    op.drop_column('users', 'is_verified')
    op.drop_column('users', 'language')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('language', sa.VARCHAR(length=10), server_default=sa.text("'uz'"), nullable=False))
    op.add_column('users', sa.Column('is_verified', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=False))
    op.add_column('users', sa.Column('blocked_at', sa.DATETIME(), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.VARCHAR(length=255), nullable=True))
    op.add_column('users', sa.Column('phone', sa.VARCHAR(length=20), nullable=True))
    op.add_column('users', sa.Column('username', sa.VARCHAR(length=255), nullable=True))
    op.add_column('users', sa.Column('is_blocked', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=False))
    op.add_column('users', sa.Column('verified_at', sa.DATETIME(), nullable=True))
    op.add_column('users', sa.Column('first_name', sa.VARCHAR(length=255), nullable=True))
    op.add_column('users', sa.Column('block_reason', sa.TEXT(), nullable=True))
    op.alter_column('users', 'id',
               existing_type=sa.String(length=36),
               type_=sa.CHAR(length=32),
               existing_nullable=False)
    op.add_column('listings', sa.Column('rejected_at', sa.DATETIME(), nullable=True))
    op.add_column('listings', sa.Column('owner_id', sa.CHAR(length=32), nullable=False))
    op.add_column('listings', sa.Column('area', sa.FLOAT(), nullable=True))
    op.add_column('listings', sa.Column('photos', sa.TEXT(), nullable=True))
    op.add_column('listings', sa.Column('available_from', sa.DATE(), nullable=True))
    op.add_column('listings', sa.Column('has_balcony', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=True))
    op.add_column('listings', sa.Column('is_furnished', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=True))
    op.add_column('listings', sa.Column('has_internet', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=True))
    op.add_column('listings', sa.Column('views', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False))
    op.add_column('listings', sa.Column('is_premium', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=False))
    op.add_column('listings', sa.Column('utilities_included', sa.BOOLEAN(), nullable=True))
    op.add_column('listings', sa.Column('has_parking', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=True))
    op.add_column('listings', sa.Column('city', sa.VARCHAR(length=100), nullable=True))
    op.add_column('listings', sa.Column('region', sa.VARCHAR(length=2), nullable=True))
    op.add_column('listings', sa.Column('contact_name', sa.VARCHAR(length=255), nullable=True))
    op.add_column('listings', sa.Column('contact_phone', sa.VARCHAR(length=20), nullable=True))
    op.add_column('listings', sa.Column('deposit', sa.NUMERIC(precision=12, scale=2), nullable=True))
    op.add_column('listings', sa.Column('listing_type', sa.VARCHAR(length=20), nullable=True))
    op.add_column('listings', sa.Column('contacts', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False))
    op.drop_constraint(None, 'listings', type_='foreignkey')
    op.create_foreign_key(None, 'listings', 'users', ['owner_id'], ['id'])
    op.alter_column('listings', 'currency',
               existing_type=sa.VARCHAR(length=3),
               nullable=True,
               existing_server_default=sa.text("'USD'"))
    op.alter_column('listings', 'user_id',
               existing_type=sa.VARCHAR(length=36),
               nullable=True)
    op.alter_column('listings', 'id',
               existing_type=sa.String(length=36),
               type_=sa.CHAR(length=32),
               existing_nullable=False)
    op.drop_column('listings', 'property_type')
    op.create_table('auth_tokens',
    sa.Column('id', sa.CHAR(length=32), nullable=False),
    sa.Column('token', sa.VARCHAR(length=255), nullable=False),
    sa.Column('telegram_user_id', sa.BIGINT(), nullable=True),
    sa.Column('phone_number', sa.VARCHAR(length=20), nullable=True),
    sa.Column('used', sa.BOOLEAN(), nullable=False),
    sa.Column('expires_at', sa.DATETIME(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), nullable=True),
    sa.Column('token_type', sa.VARCHAR(length=50), server_default=sa.text("'access'"), nullable=True),
    sa.Column('phone', sa.VARCHAR(length=20), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text("'1'"), nullable=False),
    sa.Column('used_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('lookups',
    sa.Column('region_code', sa.VARCHAR(length=2), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('cities', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('region_code')
    )
    op.create_table('messages',
    sa.Column('id', sa.CHAR(length=32), nullable=False),
    sa.Column('chat_id', sa.CHAR(length=32), nullable=False),
    sa.Column('sender_id', sa.CHAR(length=32), nullable=False),
    sa.Column('type', sa.VARCHAR(length=5), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('read_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('id', sa.CHAR(length=32), nullable=False),
    sa.Column('reporter_id', sa.CHAR(length=32), nullable=False),
    sa.Column('listing_id', sa.CHAR(length=32), nullable=False),
    sa.Column('reason', sa.VARCHAR(length=6), nullable=False),
    sa.Column('details', sa.TEXT(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=6), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('resolved_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['listing_id'], ['listings.id'], ),
    sa.ForeignKeyConstraint(['reporter_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chats',
    sa.Column('id', sa.CHAR(length=32), nullable=False),
    sa.Column('listing_id', sa.CHAR(length=32), nullable=False),
    sa.Column('user_a_id', sa.CHAR(length=32), nullable=False),
    sa.Column('user_b_id', sa.CHAR(length=32), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('last_message_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['listing_id'], ['listings.id'], ),
    sa.ForeignKeyConstraint(['user_a_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_b_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
