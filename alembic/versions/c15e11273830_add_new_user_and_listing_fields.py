"""Add new user and listing fields

Revision ID: c15e11273830
Revises: 9d19fac367e2
Create Date: 2025-09-16 23:33:11.155675

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c15e11273830'
down_revision: Union[str, Sequence[str], None] = '9d19fac367e2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add new columns to users table
    op.add_column('users', sa.Column('first_name', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('username', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('phone', sa.String(length=20), nullable=True))
    op.add_column('users', sa.Column('language', sa.String(length=10), nullable=False, server_default='uz'))
    op.add_column('users', sa.Column('is_verified', sa.Boolean(), nullable=False, server_default='0'))
    op.add_column('users', sa.Column('is_blocked', sa.Boolean(), nullable=False, server_default='0'))
    op.add_column('users', sa.Column('verified_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('blocked_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('block_reason', sa.Text(), nullable=True))
    
    # Add new columns to listings table
    op.add_column('listings', sa.Column('user_id', sa.String(length=36), nullable=True))  # UUID as string for SQLite
    op.add_column('listings', sa.Column('region', sa.String(length=2), nullable=True))
    op.add_column('listings', sa.Column('city', sa.String(length=100), nullable=True))
    op.add_column('listings', sa.Column('listing_type', sa.String(length=20), nullable=True))
    op.add_column('listings', sa.Column('area', sa.Float(), nullable=True))
    op.add_column('listings', sa.Column('currency', sa.String(length=3), nullable=True, server_default='USD'))
    op.add_column('listings', sa.Column('is_furnished', sa.Boolean(), nullable=True, server_default='0'))
    op.add_column('listings', sa.Column('has_parking', sa.Boolean(), nullable=True, server_default='0'))
    op.add_column('listings', sa.Column('has_balcony', sa.Boolean(), nullable=True, server_default='0'))
    op.add_column('listings', sa.Column('has_internet', sa.Boolean(), nullable=True, server_default='0'))
    op.add_column('listings', sa.Column('contact_name', sa.String(length=255), nullable=True))
    op.add_column('listings', sa.Column('contact_phone', sa.String(length=20), nullable=True))
    op.add_column('listings', sa.Column('photos', sa.Text(), nullable=True))
    op.add_column('listings', sa.Column('views_count', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('listings', sa.Column('views', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('listings', sa.Column('contacts_count', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('listings', sa.Column('contacts', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('listings', sa.Column('rejected_at', sa.DateTime(), nullable=True))
    op.add_column('listings', sa.Column('is_premium', sa.Boolean(), nullable=False, server_default='0'))
    
    # Add new columns to auth_tokens table
    op.add_column('auth_tokens', sa.Column('user_id', sa.String(length=36), nullable=True))  # UUID as string for SQLite
    op.add_column('auth_tokens', sa.Column('token_type', sa.String(length=50), nullable=True, server_default='access'))
    op.add_column('auth_tokens', sa.Column('phone', sa.String(length=20), nullable=True))
    op.add_column('auth_tokens', sa.Column('is_active', sa.Boolean(), nullable=False, server_default='1'))
    op.add_column('auth_tokens', sa.Column('used_at', sa.DateTime(), nullable=True))
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Remove columns from auth_tokens table
    op.drop_column('auth_tokens', 'used_at')
    op.drop_column('auth_tokens', 'is_active')
    op.drop_column('auth_tokens', 'phone')
    op.drop_column('auth_tokens', 'token_type')
    op.drop_column('auth_tokens', 'user_id')
    
    # Remove columns from listings table
    op.drop_column('listings', 'is_premium')
    op.drop_column('listings', 'rejected_at')
    op.drop_column('listings', 'contacts')
    op.drop_column('listings', 'contacts_count')
    op.drop_column('listings', 'views')
    op.drop_column('listings', 'views_count')
    op.drop_column('listings', 'photos')
    op.drop_column('listings', 'contact_phone')
    op.drop_column('listings', 'contact_name')
    op.drop_column('listings', 'has_internet')
    op.drop_column('listings', 'has_balcony')
    op.drop_column('listings', 'has_parking')
    op.drop_column('listings', 'is_furnished')
    op.drop_column('listings', 'currency')
    op.drop_column('listings', 'area')
    op.drop_column('listings', 'listing_type')
    op.drop_column('listings', 'city')
    op.drop_column('listings', 'region')
    op.drop_column('listings', 'user_id')
    
    # Remove columns from users table
    op.drop_column('users', 'block_reason')
    op.drop_column('users', 'blocked_at')
    op.drop_column('users', 'verified_at')
    op.drop_column('users', 'is_blocked')
    op.drop_column('users', 'is_verified')
    op.drop_column('users', 'language')
    op.drop_column('users', 'phone')
    op.drop_column('users', 'username')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    
    # ### end Alembic commands ###
